//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reusable_project_Form_.R_ServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="R_ServiceReference.R_ServiceSoap")]
    public interface R_ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateAccount(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateAccountAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProposal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetProposal(int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProposal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProposalAsync(int subid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetReport(int reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetReportAsync(int reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProposalReviewEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateProposalReviewEmail(int submissionid, string comment, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateProposalReviewEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateProposalReviewEmailAsync(int submissionid, string comment, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface R_ServiceSoapChannel : Reusable_project_Form_.R_ServiceReference.R_ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class R_ServiceSoapClient : System.ServiceModel.ClientBase<Reusable_project_Form_.R_ServiceReference.R_ServiceSoap>, Reusable_project_Form_.R_ServiceReference.R_ServiceSoap {
        
        public R_ServiceSoapClient() {
        }
        
        public R_ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public R_ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public R_ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public R_ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateAccount(string username, string password, string email) {
            return base.Channel.CreateAccount(username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> CreateAccountAsync(string username, string password, string email) {
            return base.Channel.CreateAccountAsync(username, password, email);
        }
        
        public System.Data.DataTable GetProposal(int subid) {
            return base.Channel.GetProposal(subid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProposalAsync(int subid) {
            return base.Channel.GetProposalAsync(subid);
        }
        
        public System.Data.DataTable GetReport(int reportid) {
            return base.Channel.GetReport(reportid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetReportAsync(int reportid) {
            return base.Channel.GetReportAsync(reportid);
        }
        
        public bool CreateProposalReviewEmail(int submissionid, string comment, string status) {
            return base.Channel.CreateProposalReviewEmail(submissionid, comment, status);
        }
        
        public System.Threading.Tasks.Task<bool> CreateProposalReviewEmailAsync(int submissionid, string comment, string status) {
            return base.Channel.CreateProposalReviewEmailAsync(submissionid, comment, status);
        }
    }
}
